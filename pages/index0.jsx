import {  signIn, signOut, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
//import { responseSymbol } from "next/dist/server/web/spec-compliant/fetch-event";
import styles from "../styles/Home.module.css";

export default function Home() {
  const { data: session, status } = useSession();
  const router = useRouter();

  const [userInfo, setUserInfo] = useState({ email: "", password: "" });
  const handleSubmit = async (e) => {
    e.preventDefault();

console.log('email: ', userInfo.email, 'password: ', userInfo.password)

    const res = await signIn("credentials", {
      email: userInfo.email,
      password: userInfo.password,
      redirect: false,
    });

    console.log('respuesta, sin hacer nada: ', res);
  };

  console.log("session: ", session, "status: ", status);

  if (status === "authenticated")
    router.push('/DashBoard')
  
  if (status === "loading") {
    <p>loading...</p>;
  } else if (status === "unauthenticated") {
      //router.push('/login')
    return (
      <div>
        <h1>No autenticado</h1>
        <form onSubmit={handleSubmit}>
          <h1>Login</h1>
          <input
            value={userInfo.email}
            onChange={({ target }) =>
              setUserInfo({ ...userInfo, email: target.value })
            }
            type="text"
            placeholder="username"
            name="username"
          />
          <input
            value={userInfo.password}
            onChange={({ target }) =>
              setUserInfo({ ...userInfo, password: target.value })
            }
            type="password"
            placeholder="password"
            name="password"
          />
          <span>
            <button
              className="button bg-orange-500 p-2"
              onSubmit={handleSubmit}
            >
              Sign In
            </button>
          </span>
        </form>
        </div>
    );
  } else {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          {session ? (
            <button
              className="button bg-orange-600 p-2 m-2"
              onClick={() => signOut('credentials')}
            >
              Log outx
            </button>
          ) : (
            <button
              className="button bg-green-600 p-2 m-2 text"
              onClick={() => {
                router.push("/api/auth/signin");
              }}
            >
              Sign in
            </button>
          )}
          <h1 className={styles.title}>
            Welcome to <a href="https://nextjs.org">Next.js!</a>
          </h1>

          <p className={styles.description}>
            Get started by editing{" "}
            <code className={styles.code}>pages/index.js</code>
          </p>

          <div className={styles.grid}>
            <a href="https://nextjs.org/docs" className={styles.card}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </a>

            <a href="https://nextjs.org/learn" className={styles.card}>
              <h2>Learn &rarr;</h2>
              <p>Learn about Next.js in an interactive course with quizzes!</p>
            </a>

            <a
              href="https://github.com/vercel/next.js/tree/master/examples"
              className={styles.card}
            >
              <h2>Examples &rarr;</h2>
              <p>Discover and deploy boilerplate example Next.js projects.</p>
            </a>

            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
            >
              <h2>Deploy &rarr;</h2>
              <p>
                Instantly deploy your Next.js site to a public URL with Vercel.
              </p>
            </a>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{" "}
            <span className={styles.logo}>
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>
    );
  }
}
/*
export const getServerSideProps = async (context) => {
  
  const session = await getSession(context)

  if(!session) return{
    redirect:{
      destination:'/index0',
      permanent: false,
    }
  }
  return{
    props:{
        session
    }
  }
}

*/